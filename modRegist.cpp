#include <stdio.h>
#include <stdlib.h>
#include <Windows.h>
#include <string>
#include <iostream>
#define TOTAL_BYTES_READ    1024
#define OFFSET_BYTES 1024

using namespace std;

BOOL writeStringInRegistry(HKEY hKeyParent, LPCSTR subkey, LPCSTR valueName, LPCSTR strData)
{
    DWORD Ret;
    HKEY hKey;
    
    //Check if the registry exists
    Ret = RegOpenKeyEx(hKeyParent,subkey,0,KEY_WRITE,&hKey);
    if (Ret == ERROR_SUCCESS)
    {
        if (ERROR_SUCCESS != RegSetValueEx(hKey,valueName,0,REG_SZ,(LPBYTE)(strData),((((DWORD)lstrlen(strData) + 1)) * 2)))
        {
            RegCloseKey(hKey);
            return FALSE;
        }
        RegCloseKey(hKey);
        return TRUE;
    }
    return FALSE;
}



BOOL readStringFromRegistry(HKEY hKeyParent, LPCSTR subkey, LPCSTR valueName/*, LPCSTR *readData*/)
{
    HKEY hKey;
    DWORD len = TOTAL_BYTES_READ;
    DWORD readDataLen = len;
    PWCHAR readBuffer = (PWCHAR )malloc(sizeof(PWCHAR)* len);
    if (readBuffer == NULL)
        return FALSE;
    //Check if the registry exists
    DWORD Ret = RegOpenKeyEx(hKeyParent,subkey,0,KEY_READ,&hKey);
    if (Ret == ERROR_SUCCESS)
    {
        Ret = RegQueryValueEx(hKey,valueName,NULL,NULL,(BYTE*)readBuffer,&readDataLen);
        /*while (Ret == ERROR_MORE_DATA)
        {
            // Get a buffer that is big enough.
            len += OFFSET_BYTES;
            readBuffer = (PWCHAR)realloc(readBuffer, len);
            readDataLen = len;
            Ret = RegQueryValueEx(hKey,valueName,NULL,NULL,(BYTE*)readBuffer,&readDataLen);
        }*/
        if (Ret != ERROR_SUCCESS)
        {
            RegCloseKey(hKey);
            return false;
        }
        //*readData = readBuffer;
        RegCloseKey(hKey);
        return true;
    }
    else
    {
        return false;
    }
}



int main(){
    bool exist = readStringFromRegistry(HKEY_CURRENT_USER,"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run","Message");
    if (exist){
        cout << "hello\n";
        getchar();
    }
    else
    {
        cout << "key is yet to be created...\n";
        bool stats = writeStringInRegistry(HKEY_CURRENT_USER,"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run","Message","C:\\Users\\must\\Desktop\\modReg\\a.exe");
        if (stats)
        cout << "success\n";
        else cout << "error\n";
    }
    
    
}